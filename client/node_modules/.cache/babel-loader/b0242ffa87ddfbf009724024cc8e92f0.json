{"ast":null,"code":"class Api {\n  get headers() {\n    return new Headers({ ...(this.token ? {\n        'Authorization': `Bearer ${this.token}`\n      } : {}),\n      'Content-Type': 'application/json'\n    });\n  }\n\n  constructor() {\n    let token = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n    this.token = null;\n    this.token = token;\n  }\n\n  async send(request) {\n    const response = await fetch(request);\n    console.log(response);\n\n    if (!response.headers.get('Content-Type').includes('application/json')) {\n      return null;\n    }\n\n    const body = await response.json();\n\n    if (response.status >= 400) {\n      console.log(body.error);\n      return null;\n    }\n\n    return body;\n  }\n\n  async get(path) {\n    let {\n      fields,\n      filters,\n      ...rest\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const params = new URLSearchParams({ ...(fields ? {\n        fields: fields.join(',')\n      } : {}),\n      ...(filters ? {\n        filters: filters.join(' and ')\n      } : {}),\n      ...rest\n    });\n    return this.send(new Request(`${path}?${params.toString()}`, {\n      method: 'GET',\n      headers: this.headers\n    }));\n  }\n\n  async post(path, payload) {\n    //console.log(JSON.stringify(payload));\n    return this.send(new Request(path, {\n      method: 'POST',\n      headers: this.headers,\n      body: JSON.stringify(payload)\n    }));\n  }\n\n  async put(path, payload) {\n    return this.send(new Request(path, {\n      method: 'PUT',\n      headers: this.headers,\n      body: JSON.stringify(payload)\n    }));\n  }\n\n}\n\nexport default Api;","map":{"version":3,"names":["Api","headers","Headers","token","constructor","send","request","response","fetch","console","log","get","includes","body","json","status","error","path","fields","filters","rest","params","URLSearchParams","join","Request","toString","method","post","payload","JSON","stringify","put"],"sources":["/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/utils/Api.js"],"sourcesContent":["class Api {\n    token = null;\n  \n    get headers() {\n      return new Headers({\n        ...this.token ? {'Authorization': `Bearer ${this.token}`} : {},\n        'Content-Type': 'application/json'\n      });\n    }\n  \n    constructor(token = null) {\n      this.token = token;\n    }\n  \n    async send(request) {\n      const response = await fetch(request);\n      console.log(response);\n      if(!response.headers.get('Content-Type').includes('application/json')) {\n        return null;\n      }\n  \n      const body = await response.json();\n  \n      if(response.status >= 400) {\n        console.log(body.error);\n  \n        return null;\n      }\n  \n      return body;\n    }\n  \n    async get(path, {fields, filters, ...rest} = {}) {\n      const params = new URLSearchParams({\n        ...fields ? {fields: fields.join(',')} : {},\n        ...filters ? {filters: filters.join(' and ')} : {},\n        ...rest\n      });\n  \n      return this.send(\n        new Request(\n          `${path}?${params.toString()}`,\n          {\n            method: 'GET',\n            headers: this.headers\n          }\n        )\n      );\n    }\n  \n    async post(path, payload) {\n        //console.log(JSON.stringify(payload));\n      return this.send(\n        new Request(\n          path,\n          {\n            method: 'POST',\n            headers: this.headers,\n            body: JSON.stringify(payload)\n          }\n        )\n      );\n    }\n  \n    async put(path, payload) {\n      return this.send(\n        new Request(\n          path,\n          {\n            method: 'PUT',\n            headers: this.headers,\n            body: JSON.stringify(payload)\n          }\n        )\n      );\n    }\n  }\n  \n  export default Api;\n  "],"mappings":"AAAA,MAAMA,GAAN,CAAU;EAGK,IAAPC,OAAO,GAAG;IACZ,OAAO,IAAIC,OAAJ,CAAY,EACjB,IAAG,KAAKC,KAAL,GAAa;QAAC,iBAAkB,UAAS,KAAKA,KAAM;MAAvC,CAAb,GAAyD,EAA5D,CADiB;MAEjB,gBAAgB;IAFC,CAAZ,CAAP;EAID;;EAEDC,WAAW,GAAe;IAAA,IAAdD,KAAc,uEAAN,IAAM;IAAA,KAT1BA,KAS0B,GATlB,IASkB;IACxB,KAAKA,KAAL,GAAaA,KAAb;EACD;;EAES,MAAJE,IAAI,CAACC,OAAD,EAAU;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,OAAD,CAA5B;IACAG,OAAO,CAACC,GAAR,CAAYH,QAAZ;;IACA,IAAG,CAACA,QAAQ,CAACN,OAAT,CAAiBU,GAAjB,CAAqB,cAArB,EAAqCC,QAArC,CAA8C,kBAA9C,CAAJ,EAAuE;MACrE,OAAO,IAAP;IACD;;IAED,MAAMC,IAAI,GAAG,MAAMN,QAAQ,CAACO,IAAT,EAAnB;;IAEA,IAAGP,QAAQ,CAACQ,MAAT,IAAmB,GAAtB,EAA2B;MACzBN,OAAO,CAACC,GAAR,CAAYG,IAAI,CAACG,KAAjB;MAEA,OAAO,IAAP;IACD;;IAED,OAAOH,IAAP;EACD;;EAEQ,MAAHF,GAAG,CAACM,IAAD,EAAwC;IAAA,IAAjC;MAACC,MAAD;MAASC,OAAT;MAAkB,GAAGC;IAArB,CAAiC,uEAAJ,EAAI;IAC/C,MAAMC,MAAM,GAAG,IAAIC,eAAJ,CAAoB,EACjC,IAAGJ,MAAM,GAAG;QAACA,MAAM,EAAEA,MAAM,CAACK,IAAP,CAAY,GAAZ;MAAT,CAAH,GAAgC,EAAzC,CADiC;MAEjC,IAAGJ,OAAO,GAAG;QAACA,OAAO,EAAEA,OAAO,CAACI,IAAR,CAAa,OAAb;MAAV,CAAH,GAAsC,EAAhD,CAFiC;MAGjC,GAAGH;IAH8B,CAApB,CAAf;IAMA,OAAO,KAAKf,IAAL,CACL,IAAImB,OAAJ,CACG,GAAEP,IAAK,IAAGI,MAAM,CAACI,QAAP,EAAkB,EAD/B,EAEE;MACEC,MAAM,EAAE,KADV;MAEEzB,OAAO,EAAE,KAAKA;IAFhB,CAFF,CADK,CAAP;EASD;;EAES,MAAJ0B,IAAI,CAACV,IAAD,EAAOW,OAAP,EAAgB;IACtB;IACF,OAAO,KAAKvB,IAAL,CACL,IAAImB,OAAJ,CACEP,IADF,EAEE;MACES,MAAM,EAAE,MADV;MAEEzB,OAAO,EAAE,KAAKA,OAFhB;MAGEY,IAAI,EAAEgB,IAAI,CAACC,SAAL,CAAeF,OAAf;IAHR,CAFF,CADK,CAAP;EAUD;;EAEQ,MAAHG,GAAG,CAACd,IAAD,EAAOW,OAAP,EAAgB;IACvB,OAAO,KAAKvB,IAAL,CACL,IAAImB,OAAJ,CACEP,IADF,EAEE;MACES,MAAM,EAAE,KADV;MAEEzB,OAAO,EAAE,KAAKA,OAFhB;MAGEY,IAAI,EAAEgB,IAAI,CAACC,SAAL,CAAeF,OAAf;IAHR,CAFF,CADK,CAAP;EAUD;;AA3EK;;AA8ER,eAAe5B,GAAf"},"metadata":{},"sourceType":"module"}
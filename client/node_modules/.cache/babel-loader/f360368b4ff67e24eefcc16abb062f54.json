{"ast":null,"code":"import * as React from 'react';\nimport { io } from 'socket.io-client';\nimport { reaction } from 'mobx';\nimport { createBrowserHistory } from 'history';\nimport AuthStore from './AuthStore';\nexport const StoreContext = /*#__PURE__*/React.createContext(null);\nexport class Store {\n  constructor() {\n    var _this$AuthStore;\n\n    this.history = createBrowserHistory();\n    this.AuthStore = new AuthStore();\n    this.AuthStore = new AuthStore();\n    this.socket = io('', {\n      transports: ['websocket'],\n      query: {\n        token: (_this$AuthStore = this.AuthStore) === null || _this$AuthStore === void 0 ? void 0 : _this$AuthStore.token\n      }\n    });\n    this.socket.io.on('reconnect_attempt', () => {\n      var _this$AuthStore2;\n\n      this.socket.io.opts.query.token = (_this$AuthStore2 = this.AuthStore) === null || _this$AuthStore2 === void 0 ? void 0 : _this$AuthStore2.token;\n    });\n    reaction(() => this.AuthStore.token, () => {\n      this.socket.disconnect();\n      this.socket.connect();\n    });\n  }\n\n}","map":{"version":3,"names":["React","io","reaction","createBrowserHistory","AuthStore","StoreContext","createContext","Store","constructor","history","socket","transports","query","token","on","opts","disconnect","connect"],"sources":["/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/stores/index.js"],"sourcesContent":["import * as React from 'react';\nimport {io} from 'socket.io-client';\nimport {reaction} from 'mobx';\nimport {createBrowserHistory} from 'history';\nimport AuthStore from './AuthStore';\n\nexport const StoreContext = React.createContext(null);\nexport class Store {\n  socket;\n  history;\n  AuthStore;\n  constructor() {\n    this.history = createBrowserHistory();\n    this.AuthStore = new AuthStore();\n    this.AuthStore = new AuthStore();\n\n\n    this.socket = io(\n        '',\n        {\n          transports: ['websocket'],\n          query: {\n            token: this.AuthStore?.token\n          }\n        }\n      );\n    this.socket.io.on(\n        'reconnect_attempt',\n        () => {\n          this.socket.io.opts.query.token = this.AuthStore?.token;\n        }\n      );\n    reaction(\n        () => this.AuthStore.token,\n        () => {\n          this.socket.disconnect();\n          this.socket.connect();\n        }\n      );\n  }\n}\n"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAAQC,EAAR,QAAiB,kBAAjB;AACA,SAAQC,QAAR,QAAuB,MAAvB;AACA,SAAQC,oBAAR,QAAmC,SAAnC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,OAAO,MAAMC,YAAY,gBAAGL,KAAK,CAACM,aAAN,CAAoB,IAApB,CAArB;AACP,OAAO,MAAMC,KAAN,CAAY;EAIjBC,WAAW,GAAG;IAAA;;IACZ,KAAKC,OAAL,GAAeN,oBAAoB,EAAnC;IACA,KAAKC,SAAL,GAAiB,IAAIA,SAAJ,EAAjB;IACA,KAAKA,SAAL,GAAiB,IAAIA,SAAJ,EAAjB;IAGA,KAAKM,MAAL,GAAcT,EAAE,CACZ,EADY,EAEZ;MACEU,UAAU,EAAE,CAAC,WAAD,CADd;MAEEC,KAAK,EAAE;QACLC,KAAK,qBAAE,KAAKT,SAAP,oDAAE,gBAAgBS;MADlB;IAFT,CAFY,CAAhB;IASA,KAAKH,MAAL,CAAYT,EAAZ,CAAea,EAAf,CACI,mBADJ,EAEI,MAAM;MAAA;;MACJ,KAAKJ,MAAL,CAAYT,EAAZ,CAAec,IAAf,CAAoBH,KAApB,CAA0BC,KAA1B,uBAAkC,KAAKT,SAAvC,qDAAkC,iBAAgBS,KAAlD;IACD,CAJL;IAMAX,QAAQ,CACJ,MAAM,KAAKE,SAAL,CAAeS,KADjB,EAEJ,MAAM;MACJ,KAAKH,MAAL,CAAYM,UAAZ;MACA,KAAKN,MAAL,CAAYO,OAAZ;IACD,CALG,CAAR;EAOD;;AAhCgB"},"metadata":{},"sourceType":"module"}
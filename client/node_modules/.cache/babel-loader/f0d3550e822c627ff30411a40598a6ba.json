{"ast":null,"code":"var _jsxFileName = \"/media/vasya/Trash/files/\\u0423\\u0447\\u0435\\u0431\\u0430/\\u0428\\u041F/\\u0412\\u044B\\u043F\\u0443\\u0441\\u043A\\u043D\\u043E\\u0439 \\u043F\\u0440\\u043E\\u0435\\u043A\\u0442/project/client/src/components/RegisterForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Container, Box } from \"@mui/system\";\nimport { Button, Grid, Paper, TextField, Typography, Divider, ButtonGroup, ToggleButtonGroup, ToggleButton } from \"@mui/material\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction RegisterForm() {\n  _s();\n\n  //const { urlBefore } = props;\n  const location = useLocation();\n  const urlBefore = location.state;\n\n  const afterReg = () => {\n    document.location.assign(urlBefore);\n  };\n\n  let but1 = \"contained\";\n  let but2 = \"primary\";\n\n  const natural = () => {\n    but1 = \"contained\";\n    but2 = \"primary\";\n    console.log('1234');\n  };\n\n  const legal = () => {\n    but1 = \"contained\";\n    but2 = \"primary\";\n    console.log('sdfg');\n  };\n\n  const [alignment, setAlignment] = React.useState('web');\n\n  const handleChange = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n\n  return (\n    /*#__PURE__*/\n    //<Button onClick={afterReg}>ananas</Button>\n    _jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        fixed: true,\n        children: /*#__PURE__*/_jsxDEV(Paper, {\n          sx: {\n            mt: 2\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            justifyContent: \"center\",\n            component: \"form\",\n            sx: {\n              p: 2,\n              '& .MuiTextField-root': {\n                m: 1,\n                minWidth: '40%',\n                maxWidth: '40%'\n              }\n            },\n            noValidate: true,\n            autoComplete: \"off\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              maxWidth: \"md\",\n              rowSpacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  align: \"center\",\n                  variant: \"h4\",\n                  children: \"\\u0420\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u044F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  align: \"center\",\n                  variant: \"h6\",\n                  children: \"\\u0417\\u0430\\u043F\\u043E\\u043B\\u043D\\u0438\\u0442\\u0435 \\u043F\\u043E\\u043B\\u044F(\\u043E\\u0442\\u043C\\u0435\\u0447\\u0435\\u043D\\u043D\\u044B\\u0435 \\u043F\\u043E\\u0434 * \\u043E\\u0431\\u044F\\u0437\\u0430\\u0442\\u0435\\u043B\\u044C\\u043D\\u044B\\u0435 \\u043A \\u0437\\u0430\\u043F\\u043E\\u043B\\u043D\\u0435\\u043D\\u0438\\u044E):\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  id: \"nickname\",\n                  label: \"\\u0418\\u043C\\u044F \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430\",\n                  helperText: \"\\u0411\\u0443\\u0434\\u0435\\u0442 \\u0438\\u0441\\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u044C\\u0441\\u044F \\u043F\\u0440\\u0438 \\u0432\\u0445\\u043E\\u0434\\u0435 \\u0432 \\u0441\\u0438\\u0441\\u0442\\u0435\\u043C\\u0443\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  id: \"number\",\n                  label: \"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430\",\n                  helperText: \"\\u041F\\u043E \\u043D\\u043E\\u043C\\u0435\\u0440\\u0443 \\u0442\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D\\u0430 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0438 \\u0441\\u043C\\u043E\\u0433\\u0443\\u0442 \\u0441\\u0432\\u044F\\u0437\\u0430\\u0442\\u044C\\u0441\\u044F \\u0441 \\u0432\\u0430\\u043C\\u0438\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n                  value: alignment,\n                  exclusive: true,\n                  onChange: handleChange,\n                  children: [/*#__PURE__*/_jsxDEV(ToggleButton, {\n                    value: \"web\",\n                    children: \"\\u0424\\u0438\\u0437\\u0438\\u0447\\u0435\\u0441\\u043A\\u043E\\u0435 \\u043B\\u0438\\u0446\\u043E\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 29\n                  }, this), /*#__PURE__*/_jsxDEV(ToggleButton, {\n                    value: \"android\",\n                    children: \"\\u042E\\u0440\\u0438\\u0434\\u0438\\u0447\\u0435\\u0441\\u043A\\u043E\\u0435 \\u043B\\u0438\\u0446\\u043E\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 29\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 69,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: [/*#__PURE__*/_jsxDEV(TextField, {\n                  required: true,\n                  id: \"name\",\n                  label: \"\\u0418\\u043C\\u044F\",\n                  helperText: \"\\u0414\\u0440\\u0443\\u0433\\u0438\\u0435 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0438 \\u0431\\u0443\\u0434\\u0443\\u0442 \\u0437\\u043D\\u0430\\u0442\\u044C, \\u043A\\u0430\\u043A \\u043A \\u0432\\u0430\\u043C \\u043E\\u0431\\u0440\\u0430\\u0449\\u0430\\u0442\\u044C\\u0441\\u044F\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TextField, {\n                  id: \"surname\",\n                  label: \"\\u0424\\u0430\\u043C\\u0438\\u043B\\u0438\\u044F(\\u0438\\u043B\\u0438 \\u043E\\u0442\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this)\n  );\n}\n\n_s(RegisterForm, \"uYD/wPFmE4CH4qk2g1GZmxOSkjA=\", false, function () {\n  return [useLocation];\n});\n\n_c = RegisterForm;\nexport default RegisterForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterForm\");","map":{"version":3,"names":["React","Container","Box","Button","Grid","Paper","TextField","Typography","Divider","ButtonGroup","ToggleButtonGroup","ToggleButton","useNavigate","useLocation","RegisterForm","location","urlBefore","state","afterReg","document","assign","but1","but2","natural","console","log","legal","alignment","setAlignment","useState","handleChange","event","newAlignment","mt","p","m","minWidth","maxWidth"],"sources":["/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/components/RegisterForm.js"],"sourcesContent":["import React from \"react\";\nimport { Container, Box } from \"@mui/system\";\nimport { Button, Grid, Paper, TextField, Typography, Divider, ButtonGroup, ToggleButtonGroup, ToggleButton } from \"@mui/material\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\n\nfunction RegisterForm(){\n    //const { urlBefore } = props;\n\n    const location = useLocation();\n    const urlBefore = location.state;\n    const afterReg = () => {\n        document.location.assign(urlBefore);\n    }\n    let but1 = \"contained\";\n    let but2 = \"primary\";\n\n    const natural = () => {\n        but1 = \"contained\";\n        but2 = \"primary\";\n        console.log('1234');\n    }\n    const legal = () => {\n        but1 = \"contained\";\n        but2 = \"primary\";\n        console.log('sdfg');\n    }\n    const [alignment, setAlignment] = React.useState('web');\n\n  const handleChange = (event, newAlignment) => {\n    setAlignment(newAlignment);\n  };\n\n    return(\n        //<Button onClick={afterReg}>ananas</Button>\n        <Box>\n        <Container fixed>\n            <Paper sx={{mt: 2}}>\n                <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                component=\"form\"\n                sx={{p: 2,\n                    '& .MuiTextField-root': { m: 1, minWidth: '40%', maxWidth: '40%' }}}\n                noValidate\n                autoComplete=\"off\"\n                >\n                <Grid container alignItems='center' justifyContent='center' maxWidth='md' rowSpacing={2}>\n                    <Grid item>   \n                    <Typography align=\"center\" variant=\"h4\">\n                        Регистрация\n                    </Typography>\n                    <Typography align=\"center\" variant=\"h6\">Заполните поля(отмеченные под * обязательные к заполнению):</Typography>\n                    </Grid>\n                    <Grid item>   \n                        <TextField \n                        required\n                        id = \"nickname\"\n                        label = \"Имя аккаунта\"\n                        helperText=\"Будет использоваться при входе в систему\"\n                        />\n                        <TextField \n                        required\n                        id = \"number\"\n                        label = \"Номер телефона\"\n                        helperText=\"По номеру телефона пользователи смогут связаться с вами\"\n                        />\n                    </Grid>\n                    <Grid item> \n                        <ToggleButtonGroup\n                            value={alignment}\n                            exclusive\n                            onChange={handleChange}\n                        >\n                            <ToggleButton value=\"web\">Физическое лицо</ToggleButton>\n                            <ToggleButton value=\"android\">Юридическое лицо</ToggleButton>\n                        </ToggleButtonGroup>\n                    </Grid>\n                    <Grid item> \n                        <TextField \n                        required\n                        id = \"name\"\n                        label = \"Имя\"\n                        helperText=\"Другие пользователи будут знать, как к вам обращаться\"/>\n                        <TextField \n                        id = \"surname\"\n                        label = \"Фамилия(или отчество)\"/>\n                    </Grid>\n                </Grid> \n                </Box>\n            </Paper>\n        </Container>\n        </Box>\n    )\n}\n\nexport default RegisterForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}
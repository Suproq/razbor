[{"/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/index.js":"1","/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/App.js":"2","/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/reportWebVitals.js":"3","/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/components/Header.js":"4","/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/themes.js":"5","/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/components/SearchBar.js":"6","/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/components/LoginForm.js":"7","/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/components/Home.js":"8","/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/components/RegisterForm.js":"9","/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/stores/LoginStore.js":"10","/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/stores/AuthStore.js":"11","/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/utils/Api.js":"12","/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/stores/index.js":"13"},{"size":646,"mtime":1657927988086,"results":"14","hashOfConfig":"15"},{"size":828,"mtime":1657746774906,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":1657303593271,"results":"17","hashOfConfig":"15"},{"size":4511,"mtime":1657943069251,"results":"18","hashOfConfig":"15"},{"size":643,"mtime":1657802479952,"results":"19","hashOfConfig":"15"},{"size":1707,"mtime":1657636849664,"results":"20","hashOfConfig":"15"},{"size":2839,"mtime":1657942821619,"results":"21","hashOfConfig":"15"},{"size":2346,"mtime":1657934976237,"results":"22","hashOfConfig":"15"},{"size":10665,"mtime":1657932909589,"results":"23","hashOfConfig":"15"},{"size":1406,"mtime":1657942802465,"results":"24","hashOfConfig":"15"},{"size":2287,"mtime":1657930133139,"results":"25","hashOfConfig":"15"},{"size":1675,"mtime":1657928346219,"results":"26","hashOfConfig":"15"},{"size":321,"mtime":1657927952258,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"7foszg",{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","suppressedMessages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/index.js",[],[],"/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/App.js",["73"],[],"import './App.css';\nimport Header from './components/Header';\nimport LoginForm from './components/LoginForm';\n//import Main from './components/Main';\nimport { lightTheme, darkTheme } from './themes';\nimport { ThemeProvider } from '@emotion/react';\nimport { Route, Routes } from 'react-router-dom'\nimport Home from './components/Home';\nimport RegisterForm from './components/RegisterForm';\nimport { CssBaseline } from '@mui/material';\n\nconst Main = () => (\n  <main>\n    <Routes>\n      <Route path=\"/\" element={<Home />}/>\n      <Route path=\"/login\" element={<LoginForm />}/>\n      <Route path=\"/register\" element={<RegisterForm />}/>\n    </Routes>\n  </main>\n)\n\nfunction App() {\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <CssBaseline/>\n      <Header />\n      <Main />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n",[],"/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/reportWebVitals.js",[],[],"/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/components/Header.js",["74","75"],[],"import React from \"react\";\nimport AppBar from '@mui/material/AppBar';\nimport Box from '@mui/material/Box';\nimport Toolbar from '@mui/material/Toolbar';\nimport Typography from '@mui/material/Typography';\nimport Button from '@mui/material/Button';\nimport { Container } from \"@mui/system\";\nimport SearchBar from \"./SearchBar\";\nimport { Link, Navigate } from 'react-router-dom';\nimport LoginForm from \"./LoginForm\";\nimport { useNavigate } from 'react-router-dom';\nimport { SignalCellularNullOutlined } from \"@mui/icons-material\";\nimport { IconButton, Badge } from \"@mui/material\";\nimport MailIcon from '@mui/icons-material/Mail';\nimport AccountCircle from '@mui/icons-material/AccountCircle';\nimport { Menu } from \"@mui/material\";\nimport { MenuItem } from \"@mui/material\";\nimport login from '../stores/LoginStore';\n\nconst windowInnerWidth = document.documentElement.clientWidth;\nconst minWidth = 1200;\nconst logged = login.isLogged();\n\n\nfunction NonLog() {\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  const navigate = useNavigate();\n  const toReg = () => {\n    const thisUrl = window.location.href;\n    navigate('/register', { state: thisUrl });/*{\n      pathname: '/register',\n      data: thisUrl\n    })*/\n  };\n  return(\n    <>\n      <Box mr={3}>\n      <Button onClick={handleClickOpen} color = \"inherit\" variant=\"outlined\">Вход</Button>\n\n        <LoginForm \n          open={open}\n          onClose={handleClose}\n          toReg={toReg}\n        />\n\n      </Box>\n      <Button onClick={toReg} color = \"secondary\" variant=\"contained\">Регистрация</Button>\n    </>\n  )\n}\n\nfunction Logged() {\n  const nickname = login.getNick();\n  //console.log()\n  //const nickname = '1';\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const handleProfileMenuOpen = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n  const handleMenuClose = () => {\n    setAnchorEl(null);\n    //handleMobileMenuClose();\n  };\n  const handleLogout = () => {\n    login.logout();\n    window.location.reload();\n  }\n  const isMenuOpen = Boolean(anchorEl);\n  const menuId = 'primary-search-account-menu';\n  const renderMenu = (\n    <Menu\n      anchorEl={anchorEl}\n      anchorOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      id={menuId}\n      keepMounted\n      transformOrigin={{\n        vertical: 'top',\n        horizontal: 'right',\n      }}\n      open={isMenuOpen}\n      onClose={handleMenuClose}\n    >\n      <MenuItem onClick={handleMenuClose}>{nickname}</MenuItem>\n      <MenuItem onClick={handleLogout}>Выйти</MenuItem>\n    </Menu>\n  );\n\n\n  return(\n    <>\n      <IconButton size=\"large\" aria-label=\"show 4 new mails\" color=\"inherit\">\n        <Badge>\n          <MailIcon />\n        </Badge>\n      </IconButton>\n      <IconButton\n              size=\"large\"\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              onClick={handleProfileMenuOpen}\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n            {renderMenu}\n    </>\n  )\n}\n\nfunction Header() {\n  let pos=\"sticky\";\n  if (windowInnerWidth < minWidth) {\n    pos=\"static\";\n  }\n\n\n  return(\n    <>\n    <AppBar position={pos}>\n      <Container fixed>\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            noWrap\n            component={Link}\n            to=\"/\"\n            sx={[\n              {\n              fontFamily: 'monospace',\n              fontWeight: 700,\n              letterSpacing: '.3rem',\n              color: 'inherit',\n              textDecoration: 'none',\n              },\n              (theme) => ({\n                '&:hover': {\n                  color: '#66bb6a',\n                }\n              })\n          ]\n        }\n          >\n            RAZBOR\n          </Typography>\n          {windowInnerWidth >= minWidth &&\n          <SearchBar />\n          }\n          <Box sx={{ flexGrow: 1 }} />\n          {logged?<Logged />:<NonLog />}\n        </Toolbar>\n      </Container>\n    </AppBar>\n    \n    {windowInnerWidth < minWidth &&\n          <AppBar position=\"sticky\">\n            <Box display=\"flex\"\n                justifyContent=\"center\"\n            >\n            <Toolbar>\n              <SearchBar />\n            </Toolbar>\n            </Box>\n          </AppBar>\n          }\n    </>\n  );\n}\n\nexport default Header;","/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/themes.js",[],[],"/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/components/SearchBar.js",[],[],"/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/components/LoginForm.js",["76","77"],[],"import React from \"react\";\nimport { observer } from 'mobx-react';\nimport store from '../stores/LoginStore';\nimport { Button, Dialog, DialogActions,DialogContent, DialogContentText, DialogTitle, Grid, TextField, Typography, Divider } from \"@mui/material\";\nimport { Box } from \"@mui/system\";\nimport jwt from 'jwt-decode';\n\nfunction LoginForm(props){\n    const { onClose, open, toReg } = props;\n\n    const handleClose = () => {\n        onClose();\n    };\n\n    const handleReg = () => {\n        toReg();\n        onClose();\n    };\n    const [messageServ, setMess] = React.useState('');\n    const login = async() => {\n        const stNickname = document.getElementById('name').value;\n        const stPassword = document.getElementById('password').value;\n        const user = {\n            nickname: stNickname, password: stPassword\n          };\n        const response = await fetch('http://localhost:8080/api/auth/login', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(user)\n        });\n        const result = await response.json();\n        if(response.status === 200){\n            console.log(12);\n            store.jwtDecode(result);\n            onClose();\n            window.location.reload();\n        }\n        else{\n            setMess(result.message);\n        }\n    }\n    /*const handleListItemClick = (value) => {\n        onClose(value);\n    };*/\n    return(\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"Login\">\n            <DialogTitle id=\"Login\">Вход</DialogTitle>\n            <DialogContent>\n                <DialogContentText>{messageServ}</DialogContentText>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label=\"Имя аккаунта\"\n                    fullWidth\n                    variant=\"outlined\"/>\n                <TextField\n                    margin=\"dense\"\n                    id=\"password\"\n                    label=\"Пароль\"\n                    fullWidth\n                    variant=\"outlined\"\n                    type=\"password\"/>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={handleClose}>Отмена</Button>\n                <Button onClick={login}>Войти</Button>\n            </DialogActions>\n            <Divider />\n            <Box \n                display=\"flex\"\n                justifyContent=\"center\"\n                alignItems=\"center\"\n                sx = {{m: 1}} >\n                    <Typography>Нет аккаунта?</Typography>\n                    <Button onClick={handleReg}>Регистрация</Button>\n            </Box>\n                \n        </Dialog>\n    )\n}\n\nexport default observer(LoginForm);","/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/components/Home.js",[],[],"/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/components/RegisterForm.js",["78","79","80","81","82","83","84","85","86","87","88","89","90"],[],"import React, { useContext, useState } from \"react\";\nimport { observer } from \"mobx-react\";\nimport { Container, Box } from \"@mui/system\";\nimport { Button, Grid, Paper, TextField, Typography, Divider, ButtonGroup, ToggleButtonGroup, ToggleButton, FormControlLabel, Checkbox, touchRippleClasses } from \"@mui/material\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport {isMobile} from 'react-device-detect';\nimport { Navigate } from \"react-router\";\n//import {StoreContext} from \"../stores\";\nimport store from '../stores/AuthStore';\n\nfunction RegNaturalPerson(props){\n    return(\n        <>\n            <TextField \n                error = {props.erUniq1}\n                onChange={props.changeName}\n                required\n                id = \"name\"\n                label = \"Имя\"\n                helperText=\"Другие пользователи будут знать, как к вам обращаться\"\n            />\n            <TextField \n                error = {props.erUniq2}\n                onChange={props.changeUniq}\n                id = \"surnameAdr\"\n                label = \"Фамилия(или отчество)\"\n            />\n        </>\n    )\n}\n\nfunction RegLegalPerson(props){\n    return(\n        <>\n            <TextField \n                error = {props.erUniq1}\n                onChange={props.changeName}\n                required\n                id = \"name\"\n                label = \"Название вашей компании\"\n                helperText=\"Другие пользователи будут знать, как к вам обращаться\"\n            />\n            <TextField \n                error = {props.erUniq2}\n                onChange={props.changeUniq}\n                required\n                id = \"surnameAdr\"\n                label = \"Адрес компании\"\n                helperText=\"Клиенты будут знать, где вас найти\"\n            />\n        </>\n    )\n}\n\n\nfunction RegisterForm(props){\n    //const contextType = StoreContext;\n    //const { urlBefore } = props;\n    const [alignment, setAlignment] = React.useState('web');\n    let widthTextField = '45ch';\n    if(isMobile) {\n        widthTextField = '95%';\n    }\n    const location = useLocation();\n    const urlBefore = location.state;\n    /*let but1 = \"contained\";\n    let but2 = \"primary\";\n\n    const natural = () => {\n        but1 = \"contained\";\n        but2 = \"primary\";\n        console.log('1234');\n    }\n    const legal = () => {\n        but1 = \"contained\";\n        but2 = \"primary\";\n        console.log('sdfg');\n    }*/\n\n\n    const [natural, setPers] = React.useState(\"natural\");\n\n    const changePerson = (event, newValue) => {\n        setPers(newValue);\n    };\n\n    const [erPassword1, setPassEr1] = React.useState(false);\n    const [erPassword2, setPassEr2] = React.useState(false);\n\n    const [matchPass, setMatchPass] = React.useState(true);\n    const checkPasswords = () => {\n        setPassEr1(false);\n        if (document.getElementById('checkpass').value != document.getElementById('password').value){\n            setMatchPass(false);\n        }\n        else{\n            setMatchPass(true);\n        }\n    };\n    const oneCheckPass = () => {\n        setPassEr2(false);\n        if (!matchPass || document.getElementById('checkpass').value != \"\"){\n            checkPasswords();\n        }\n    }\n\n\n    const [showPassword, setShowPassword] = React.useState(false);\n    const handleClickShow = () => {\n        setShowPassword(!showPassword);\n    }\n\n    const [erNickname, setNickEr] = React.useState(false);\n    const [erPhone, setPhoneEr] = React.useState(false);\n    const [erUniq1, setUniqEr1] = React.useState(false);\n    const [erUniq2, setUniqEr2] = React.useState(false);\n    const reg = () => {\n        document.location.assign(urlBefore);\n    }\n    const [messageServ, setMess] = React.useState('');\n    const afterReg = async(e) => {\n        e.preventDefault();\n        console.log(123);\n        const stNickname = document.getElementById('nickname').value;\n        const stPhone = document.getElementById('number').value;\n        const stPasword1 = document.getElementById('password').value;\n        const stPasword2 = document.getElementById('password').value;\n        const stName = document.getElementById('name').value;\n        const surnameAdr = document.getElementById('surnameAdr').value;\n        if (stNickname === \"\"){\n            setNickEr(true);\n        }\n        if (stPhone === \"\"){\n            setPhoneEr(true);\n        }\n        if (stPasword1 === \"\"){\n            setPassEr1(true);\n        }\n        if (stPasword2 === \"\"){\n            setPassEr2(true);\n        }\n        if (stName === \"\"){\n            setUniqEr1(true);\n        }\n        if (surnameAdr === \"\"){\n            setUniqEr2(true);\n        }\n        if(setUniqEr2||setUniqEr1||setPassEr2||setPassEr1||setPhoneEr||setNickEr){\n            //return;\n        }\n        const role = natural === \"natural\" ? \"1\":\"2\";\n        const surname = natural === \"natural\" ? surnameAdr:null;\n        const address = natural === \"natural\" ? null:surnameAdr;\n        const user = {\n            nickname: stNickname, password: stPasword1, phone: stPhone,role:role,name:stName,surname:surname,address:address,darktheme:\"false\"\n          };\n        const response = await fetch('http://localhost:8080/api/auth/register', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json;charset=utf-8'\n            },\n            body: JSON.stringify(user)\n        });\n        const result = await response.json();\n        \n        /*console.log('123');\n        const message = await store.register(stNickname, stPasword1, stPhone, role, stName, surname, address, \"false\");*/\n        console.log(result);\n        if (result.message === '+'){\n            document.location.assign(urlBefore);\n        }\n        else{\n            setMess(result.message);\n        }\n        //document.location.assign(urlBefore);\n    }\n    \n    const changeNick = () => {setNickEr(false)}\n    const changePhone = () => {setPhoneEr(false)}\n    const changeName = () => {setUniqEr1(false)}\n    const changeUniq = () => {setUniqEr2(false)}\n    return(\n        //<Button onClick={afterReg}>ananas</Button>\n        //!context.AuthStore.isLoggedIn ?\n        <Box>\n        <Container fixed>\n            <Paper sx={{mt: 2}}>\n                <Box\n                display=\"flex\"\n                justifyContent=\"center\"\n                component=\"form\"\n                sx={{p: 2,\n                    '& .MuiTextField-root': { m: 1, minWidth: widthTextField, maxWidth: widthTextField }}}\n                noValidate\n                autoComplete=\"off\"\n                >\n                <Grid container alignItems='center' justifyContent='center' maxWidth='md' rowSpacing={2}>\n                    <Grid item>   \n                    <Typography align=\"center\" variant=\"h4\">\n                        Регистрация\n                    </Typography>\n                    <Typography align=\"center\" variant=\"h6\">Заполните поля(отмеченные под * обязательные к заполнению):</Typography>\n                    <Typography align=\"center\" variant=\"h6\">{messageServ}</Typography>\n                    </Grid>\n                    <Grid item>   \n                        <TextField \n                        error = {erNickname}\n                        required\n                        id = \"nickname\"\n                        label = \"Имя аккаунта\"\n                        helperText=\"Будет использоваться при входе в систему\"\n                        onChange={changeNick}\n                        />\n                        <TextField \n                        error = {erPhone}\n                        required\n                        id = \"number\"\n                        label = \"Номер телефона\"\n                        helperText=\"По номеру телефона пользователи смогут связаться с вами\"\n                        onChange={changePhone}\n                        />\n                    </Grid>\n                    <Grid item>   \n                        <TextField \n                        error = {!matchPass||erPassword1}\n                        required\n                        id = \"password\"\n                        label = \"Пароль\"\n                        helperText=\"Будет использоваться при входе в систему\"\n                        type={!showPassword ? \"password\":null}\n                        onChange={oneCheckPass} \n                        />\n                        <TextField \n                        error = {!matchPass||erPassword2}\n                        required\n                        id = \"checkpass\"\n                        label = \"Повторите пароль\"\n                        helperText={!matchPass ? \"Пароли не совпадают\":null}\n                        type={!showPassword ? \"password\":null}\n                        onChange={checkPasswords}   \n                        />\n                    </Grid>\n                    <Grid item>\n                        <FormControlLabel control={<Checkbox/>} onChange={handleClickShow} label=\"Показывать пароли\" />\n                    </Grid>\n                    <Box width=\"100%\"/>\n                    <Grid item> \n                        <ToggleButtonGroup\n                            value={natural}\n                            exclusive\n                            onChange={changePerson}\n                        >\n                            <ToggleButton value=\"natural\">Физическое лицо</ToggleButton>\n                            <ToggleButton value=\"legal\">Юридическое лицо</ToggleButton>\n                        </ToggleButtonGroup>\n                    </Grid>\n                    <Grid item> \n                        {natural === \"natural\" ? (\n                            <RegNaturalPerson erUniq1={erUniq1} changeName={changeName}/>\n                        ) : (\n                            <RegLegalPerson erUniq2={erUniq2} changeUniq={changeUniq}/>\n                        )}\n                    </Grid>\n                    <Grid item>\n                    <Button onClick={afterReg}>\n                        Зарегистрироваться\n                    </Button>\n                    </Grid>\n                </Grid> \n                </Box>\n            </Paper>\n        </Container>\n        </Box> //:\n        //<Navigate to=\"/\" replace/>\n    )\n}\n\nexport default observer(RegisterForm);","/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/stores/LoginStore.js",["91","92","93"],[],"import {makeObservable, action, computed, decorate, observable} from 'mobx';\nimport jwt from 'jwt-decode';\n\nclass LoginStore {\n    thisUser = '';\n    thisUserLoggedIn = false;\n    constructor(thisUser) {\n        makeObservable(this, {\n            thisUser: observable,\n            thisUserLoggedIn: observable,\n            jwtDecode: observable,\n            getNick: observable\n        })\n        this.thisUser = thisUser\n    }\n    users(){\n        //console.log(token);\n        const token = localStorage.getItem('token');\n        console.log(token);\n        return jwt(token);\n    }\n    logInUser(userName) {\n        this.thisUser = userName;\n        this.thisUserLoggedIn = true;\n    }\n    jwtDecode(token){\n        //console.log(token);\n        //const user = jwt(token.token);\n        //console.log(token.token);\n        localStorage.setItem('token', JSON.stringify(token.token));\n        //const js = JSON.parse(localStorage.getItem('token'))['access_token']\n        //console.log(localStorage.getItem('token'));\n        localStorage.setItem('loggedIn', 'yes');\n        //console.log(user);\n    }\n    getNick(){\n        console.log(this.users());\n        return this.users().nickname;\n    }\n    isLogged(){\n        const log = localStorage.getItem('loggedIn');\n        return log === 'yes';\n    }\n    logout(){\n        localStorage.setItem('loggedIn', 'no');\n    }\n}\n\nexport default new LoginStore();","/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/stores/AuthStore.js",[],[],"/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/utils/Api.js",[],[],"/media/vasya/Trash/files/Учеба/ШП/Выпускной проект/project/client/src/stores/index.js",[],[],{"ruleId":"94","severity":1,"message":"95","line":5,"column":10,"nodeType":"96","messageId":"97","endLine":5,"endColumn":20},{"ruleId":"94","severity":1,"message":"98","line":9,"column":16,"nodeType":"96","messageId":"97","endLine":9,"endColumn":24},{"ruleId":"94","severity":1,"message":"99","line":12,"column":10,"nodeType":"96","messageId":"97","endLine":12,"endColumn":36},{"ruleId":"94","severity":1,"message":"100","line":4,"column":87,"nodeType":"96","messageId":"97","endLine":4,"endColumn":91},{"ruleId":"94","severity":1,"message":"101","line":6,"column":8,"nodeType":"96","messageId":"97","endLine":6,"endColumn":11},{"ruleId":"94","severity":1,"message":"102","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":27},{"ruleId":"94","severity":1,"message":"103","line":1,"column":29,"nodeType":"96","messageId":"97","endLine":1,"endColumn":37},{"ruleId":"94","severity":1,"message":"104","line":4,"column":54,"nodeType":"96","messageId":"97","endLine":4,"endColumn":61},{"ruleId":"94","severity":1,"message":"105","line":4,"column":63,"nodeType":"96","messageId":"97","endLine":4,"endColumn":74},{"ruleId":"94","severity":1,"message":"106","line":4,"column":137,"nodeType":"96","messageId":"97","endLine":4,"endColumn":155},{"ruleId":"94","severity":1,"message":"107","line":5,"column":10,"nodeType":"96","messageId":"97","endLine":5,"endColumn":21},{"ruleId":"94","severity":1,"message":"98","line":7,"column":10,"nodeType":"96","messageId":"97","endLine":7,"endColumn":18},{"ruleId":"94","severity":1,"message":"108","line":9,"column":8,"nodeType":"96","messageId":"97","endLine":9,"endColumn":13},{"ruleId":"94","severity":1,"message":"109","line":59,"column":12,"nodeType":"96","messageId":"97","endLine":59,"endColumn":21},{"ruleId":"94","severity":1,"message":"110","line":59,"column":23,"nodeType":"96","messageId":"97","endLine":59,"endColumn":35},{"ruleId":"111","severity":1,"message":"112","line":93,"column":56,"nodeType":"113","messageId":"114","endLine":93,"endColumn":58},{"ruleId":"111","severity":1,"message":"112","line":102,"column":70,"nodeType":"113","messageId":"114","endLine":102,"endColumn":72},{"ruleId":"94","severity":1,"message":"115","line":117,"column":11,"nodeType":"96","messageId":"97","endLine":117,"endColumn":14},{"ruleId":"94","severity":1,"message":"116","line":1,"column":25,"nodeType":"96","messageId":"97","endLine":1,"endColumn":31},{"ruleId":"94","severity":1,"message":"117","line":1,"column":33,"nodeType":"96","messageId":"97","endLine":1,"endColumn":41},{"ruleId":"94","severity":1,"message":"118","line":1,"column":43,"nodeType":"96","messageId":"97","endLine":1,"endColumn":51},"no-unused-vars","'lightTheme' is defined but never used.","Identifier","unusedVar","'Navigate' is defined but never used.","'SignalCellularNullOutlined' is defined but never used.","'Grid' is defined but never used.","'jwt' is defined but never used.","'useContext' is defined but never used.","'useState' is defined but never used.","'Divider' is defined but never used.","'ButtonGroup' is defined but never used.","'touchRippleClasses' is defined but never used.","'useNavigate' is defined but never used.","'store' is defined but never used.","'alignment' is assigned a value but never used.","'setAlignment' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'reg' is assigned a value but never used.","'action' is defined but never used.","'computed' is defined but never used.","'decorate' is defined but never used."]